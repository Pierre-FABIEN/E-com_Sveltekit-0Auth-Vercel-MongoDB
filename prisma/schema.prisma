datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  image     String?
  role      String
  addresses Address[]
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  @@map("users")
}

model Address {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  street    String
  city      String
  state     String
  zip       String
  country   String
  userId    String? @db.ObjectId
  user      User?   @relation(fields: [userId], references: [id])
  orders    Order[]
  @@map("addresses")
}

model Order {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  userId        String        @db.ObjectId
  addressId     String        @db.ObjectId
  total         Float
  transactions  Transaction[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())

  user          User          @relation(fields: [userId], references: [id])
  address       Address       @relation(fields: [addressId], references: [id])
  @@map("orders")
}

model Product {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String
  price        Float
  stock        Float
  images       String[]
  categories   ProductCategory[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
  @@map("products")
}

model Category {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  products  ProductCategory[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
  @@map("categories")
}

model Transaction {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  stripePaymentId String   @unique
  orderId         String   @db.ObjectId
  amount          Float
  status          String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  order           Order    @relation(fields: [orderId], references: [id])
  @@map("transactions")
}

model ProductCategory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  productId   String   @db.ObjectId
  categoryId  String   @db.ObjectId

  product     Product  @relation(fields: [productId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])
  @@map("product_categories")
}
